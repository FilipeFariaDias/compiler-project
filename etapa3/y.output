Terminals unused in grammar

    TOKEN_ERROR


State 34 conflicts: 1 shift/reduce
State 47 conflicts: 1 shift/reduce
State 48 conflicts: 1 shift/reduce
State 51 conflicts: 1 shift/reduce
State 84 conflicts: 7 shift/reduce
State 85 conflicts: 7 shift/reduce
State 106 conflicts: 1 shift/reduce
State 113 conflicts: 7 shift/reduce
State 114 conflicts: 7 shift/reduce


Grammar

    0 $accept: programa $end

    1 programa: lista_declaracoes

    2 lista_declaracoes: declaracoes lista_declaracoes
    3                  | %empty

    4 declaracoes: tipo TK_IDENTIFIER '(' literal ')' ';'
    5            | tipo TK_IDENTIFIER '[' LIT_INTEGER ']' inicia_vetor ';'
    6            | tipo TK_IDENTIFIER '(' parametro ')' bloco

    7 tipo: KW_CHAR
    8     | KW_INT
    9     | KW_FLOAT

   10 literal: LIT_INTEGER
   11        | LIT_FLOAT
   12        | LIT_CHAR

   13 inicia_vetor: literal elemento_vetor
   14             | %empty

   15 elemento_vetor: literal elemento_vetor
   16               | %empty

   17 parametro: param parametro
   18          | %empty

   19 param: tipo TK_IDENTIFIER

   20 bloco: '{' comando '}'

   21 comando: cmd comando_fim

   22 comando_fim: ';' cmd comando_fim
   23            | %empty

   24 cmd: TK_IDENTIFIER ASSIGNMENT exp
   25    | TK_IDENTIFIER '[' exp ']' ASSIGNMENT exp
   26    | cmdRead
   27    | KW_PRINT l_print
   28    | KW_RETURN exp
   29    | KW_IF '(' exp ')' cmd else cmd
   30    | KW_WHILE '(' exp ')' cmd
   31    | bloco
   32    | %empty

   33 else: KW_ELSE cmd
   34     | %empty

   35 cmdRead: KW_READ TK_IDENTIFIER
   36        | KW_READ TK_IDENTIFIER '[' exp ']'

   37 exp: TK_IDENTIFIER
   38    | TK_IDENTIFIER '[' exp ']'
   39    | TK_IDENTIFIER '(' argumento ')'
   40    | literal
   41    | exp '+' exp
   42    | exp '-' exp
   43    | exp '.' exp
   44    | exp '/' exp
   45    | exp '<' exp
   46    | exp '>' exp
   47    | exp OPERATOR_EQ exp
   48    | exp OPERATOR_GE exp
   49    | exp OPERATOR_LE exp
   50    | exp OPERATOR_DIF exp
   51    | exp '&' exp
   52    | exp '|' exp
   53    | exp '~' exp
   54    | '(' exp ')'

   55 argumento: exp argumento
   56          | %empty

   57 l_print: LIT_STRING l_print
   58        | exp l_print
   59        | %empty


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 51
    '(' (40) 4 6 29 30 39 54
    ')' (41) 4 6 29 30 39 54
    '+' (43) 41
    '-' (45) 42
    '.' (46) 43
    '/' (47) 44
    ';' (59) 4 5 22
    '<' (60) 45
    '>' (62) 46
    '[' (91) 5 25 36 38
    ']' (93) 5 25 36 38
    '{' (123) 20
    '|' (124) 52
    '}' (125) 20
    '~' (126) 53
    error (256)
    KW_CHAR (258) 7
    KW_INT (259) 8
    KW_FLOAT (260) 9
    KW_IF (261) 29
    KW_ELSE (262) 33
    KW_WHILE (263) 30
    KW_READ (264) 35 36
    KW_PRINT (265) 27
    KW_RETURN (266) 28
    ASSIGNMENT (267) 24 25
    OPERATOR_LE (268) 49
    OPERATOR_GE (269) 48
    OPERATOR_EQ (270) 47
    OPERATOR_DIF (271) 50
    TK_IDENTIFIER <symbol> (272) 4 5 6 19 24 25 35 36 37 38 39
    LIT_INTEGER <symbol> (273) 5 10
    LIT_FLOAT <symbol> (274) 11
    LIT_CHAR <symbol> (275) 12
    LIT_STRING <symbol> (276) 57
    TOKEN_ERROR (277)


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    programa <ast> (40)
        on left: 1
        on right: 0
    lista_declaracoes <ast> (41)
        on left: 2 3
        on right: 1 2
    declaracoes <ast> (42)
        on left: 4 5 6
        on right: 2
    tipo <ast> (43)
        on left: 7 8 9
        on right: 4 5 6 19
    literal <ast> (44)
        on left: 10 11 12
        on right: 4 13 15 40
    inicia_vetor <ast> (45)
        on left: 13 14
        on right: 5
    elemento_vetor <ast> (46)
        on left: 15 16
        on right: 13 15
    parametro <ast> (47)
        on left: 17 18
        on right: 6 17
    param <ast> (48)
        on left: 19
        on right: 17
    bloco <ast> (49)
        on left: 20
        on right: 6 31
    comando <ast> (50)
        on left: 21
        on right: 20
    comando_fim <ast> (51)
        on left: 22 23
        on right: 21 22
    cmd <ast> (52)
        on left: 24 25 26 27 28 29 30 31 32
        on right: 21 22 29 30 33
    else <ast> (53)
        on left: 33 34
        on right: 29
    cmdRead <ast> (54)
        on left: 35 36
        on right: 26
    exp <ast> (55)
        on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
        on right: 24 25 28 29 30 36 38 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 58
    argumento <ast> (56)
        on left: 55 56
        on right: 39 55
    l_print <ast> (57)
        on left: 57 58 59
        on right: 27 57 58


State 0

    0 $accept: . programa $end

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 3 (lista_declaracoes)

    programa           go to state 4
    lista_declaracoes  go to state 5
    declaracoes        go to state 6
    tipo               go to state 7


State 1

    7 tipo: KW_CHAR .

    $default  reduce using rule 7 (tipo)


State 2

    8 tipo: KW_INT .

    $default  reduce using rule 8 (tipo)


State 3

    9 tipo: KW_FLOAT .

    $default  reduce using rule 9 (tipo)


State 4

    0 $accept: programa . $end

    $end  shift, and go to state 8


State 5

    1 programa: lista_declaracoes .

    $default  reduce using rule 1 (programa)


State 6

    2 lista_declaracoes: declaracoes . lista_declaracoes

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 3 (lista_declaracoes)

    lista_declaracoes  go to state 9
    declaracoes        go to state 6
    tipo               go to state 7


State 7

    4 declaracoes: tipo . TK_IDENTIFIER '(' literal ')' ';'
    5            | tipo . TK_IDENTIFIER '[' LIT_INTEGER ']' inicia_vetor ';'
    6            | tipo . TK_IDENTIFIER '(' parametro ')' bloco

    TK_IDENTIFIER  shift, and go to state 10


State 8

    0 $accept: programa $end .

    $default  accept


State 9

    2 lista_declaracoes: declaracoes lista_declaracoes .

    $default  reduce using rule 2 (lista_declaracoes)


State 10

    4 declaracoes: tipo TK_IDENTIFIER . '(' literal ')' ';'
    5            | tipo TK_IDENTIFIER . '[' LIT_INTEGER ']' inicia_vetor ';'
    6            | tipo TK_IDENTIFIER . '(' parametro ')' bloco

    '('  shift, and go to state 11
    '['  shift, and go to state 12


State 11

    4 declaracoes: tipo TK_IDENTIFIER '(' . literal ')' ';'
    6            | tipo TK_IDENTIFIER '(' . parametro ')' bloco

    KW_CHAR      shift, and go to state 1
    KW_INT       shift, and go to state 2
    KW_FLOAT     shift, and go to state 3
    LIT_INTEGER  shift, and go to state 13
    LIT_FLOAT    shift, and go to state 14
    LIT_CHAR     shift, and go to state 15

    $default  reduce using rule 18 (parametro)

    tipo       go to state 16
    literal    go to state 17
    parametro  go to state 18
    param      go to state 19


State 12

    5 declaracoes: tipo TK_IDENTIFIER '[' . LIT_INTEGER ']' inicia_vetor ';'

    LIT_INTEGER  shift, and go to state 20


State 13

   10 literal: LIT_INTEGER .

    $default  reduce using rule 10 (literal)


State 14

   11 literal: LIT_FLOAT .

    $default  reduce using rule 11 (literal)


State 15

   12 literal: LIT_CHAR .

    $default  reduce using rule 12 (literal)


State 16

   19 param: tipo . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 21


State 17

    4 declaracoes: tipo TK_IDENTIFIER '(' literal . ')' ';'

    ')'  shift, and go to state 22


State 18

    6 declaracoes: tipo TK_IDENTIFIER '(' parametro . ')' bloco

    ')'  shift, and go to state 23


State 19

   17 parametro: param . parametro

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 18 (parametro)

    tipo       go to state 16
    parametro  go to state 24
    param      go to state 19


State 20

    5 declaracoes: tipo TK_IDENTIFIER '[' LIT_INTEGER . ']' inicia_vetor ';'

    ']'  shift, and go to state 25


State 21

   19 param: tipo TK_IDENTIFIER .

    $default  reduce using rule 19 (param)


State 22

    4 declaracoes: tipo TK_IDENTIFIER '(' literal ')' . ';'

    ';'  shift, and go to state 26


State 23

    6 declaracoes: tipo TK_IDENTIFIER '(' parametro ')' . bloco

    '{'  shift, and go to state 27

    bloco  go to state 28


State 24

   17 parametro: param parametro .

    $default  reduce using rule 17 (parametro)


State 25

    5 declaracoes: tipo TK_IDENTIFIER '[' LIT_INTEGER ']' . inicia_vetor ';'

    LIT_INTEGER  shift, and go to state 13
    LIT_FLOAT    shift, and go to state 14
    LIT_CHAR     shift, and go to state 15

    $default  reduce using rule 14 (inicia_vetor)

    literal       go to state 29
    inicia_vetor  go to state 30


State 26

    4 declaracoes: tipo TK_IDENTIFIER '(' literal ')' ';' .

    $default  reduce using rule 4 (declaracoes)


State 27

   20 bloco: '{' . comando '}'

    KW_IF          shift, and go to state 31
    KW_WHILE       shift, and go to state 32
    KW_READ        shift, and go to state 33
    KW_PRINT       shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    '{'            shift, and go to state 27

    $default  reduce using rule 32 (cmd)

    bloco    go to state 37
    comando  go to state 38
    cmd      go to state 39
    cmdRead  go to state 40


State 28

    6 declaracoes: tipo TK_IDENTIFIER '(' parametro ')' bloco .

    $default  reduce using rule 6 (declaracoes)


State 29

   13 inicia_vetor: literal . elemento_vetor

    LIT_INTEGER  shift, and go to state 13
    LIT_FLOAT    shift, and go to state 14
    LIT_CHAR     shift, and go to state 15

    $default  reduce using rule 16 (elemento_vetor)

    literal         go to state 41
    elemento_vetor  go to state 42


State 30

    5 declaracoes: tipo TK_IDENTIFIER '[' LIT_INTEGER ']' inicia_vetor . ';'

    ';'  shift, and go to state 43


State 31

   29 cmd: KW_IF . '(' exp ')' cmd else cmd

    '('  shift, and go to state 44


State 32

   30 cmd: KW_WHILE . '(' exp ')' cmd

    '('  shift, and go to state 45


State 33

   35 cmdRead: KW_READ . TK_IDENTIFIER
   36        | KW_READ . TK_IDENTIFIER '[' exp ']'

    TK_IDENTIFIER  shift, and go to state 46


State 34

   27 cmd: KW_PRINT . l_print

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    LIT_STRING     shift, and go to state 48
    '('            shift, and go to state 49

    TK_IDENTIFIER  [reduce using rule 59 (l_print)]
    $default       reduce using rule 59 (l_print)

    literal  go to state 50
    exp      go to state 51
    l_print  go to state 52


State 35

   28 cmd: KW_RETURN . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 53


State 36

   24 cmd: TK_IDENTIFIER . ASSIGNMENT exp
   25    | TK_IDENTIFIER . '[' exp ']' ASSIGNMENT exp

    ASSIGNMENT  shift, and go to state 54
    '['         shift, and go to state 55


State 37

   31 cmd: bloco .

    $default  reduce using rule 31 (cmd)


State 38

   20 bloco: '{' comando . '}'

    '}'  shift, and go to state 56


State 39

   21 comando: cmd . comando_fim

    ';'  shift, and go to state 57

    $default  reduce using rule 23 (comando_fim)

    comando_fim  go to state 58


State 40

   26 cmd: cmdRead .

    $default  reduce using rule 26 (cmd)


State 41

   15 elemento_vetor: literal . elemento_vetor

    LIT_INTEGER  shift, and go to state 13
    LIT_FLOAT    shift, and go to state 14
    LIT_CHAR     shift, and go to state 15

    $default  reduce using rule 16 (elemento_vetor)

    literal         go to state 41
    elemento_vetor  go to state 59


State 42

   13 inicia_vetor: literal elemento_vetor .

    $default  reduce using rule 13 (inicia_vetor)


State 43

    5 declaracoes: tipo TK_IDENTIFIER '[' LIT_INTEGER ']' inicia_vetor ';' .

    $default  reduce using rule 5 (declaracoes)


State 44

   29 cmd: KW_IF '(' . exp ')' cmd else cmd

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 60


State 45

   30 cmd: KW_WHILE '(' . exp ')' cmd

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 61


State 46

   35 cmdRead: KW_READ TK_IDENTIFIER .
   36        | KW_READ TK_IDENTIFIER . '[' exp ']'

    '['  shift, and go to state 62

    $default  reduce using rule 35 (cmdRead)


State 47

   37 exp: TK_IDENTIFIER .
   38    | TK_IDENTIFIER . '[' exp ']'
   39    | TK_IDENTIFIER . '(' argumento ')'

    '('  shift, and go to state 63
    '['  shift, and go to state 64

    '('       [reduce using rule 37 (exp)]
    $default  reduce using rule 37 (exp)


State 48

   57 l_print: LIT_STRING . l_print

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    LIT_STRING     shift, and go to state 48
    '('            shift, and go to state 49

    TK_IDENTIFIER  [reduce using rule 59 (l_print)]
    $default       reduce using rule 59 (l_print)

    literal  go to state 50
    exp      go to state 51
    l_print  go to state 65


State 49

   54 exp: '(' . exp ')'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 66


State 50

   40 exp: literal .

    $default  reduce using rule 40 (exp)


State 51

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp
   58 l_print: exp . l_print

    OPERATOR_LE    shift, and go to state 67
    OPERATOR_GE    shift, and go to state 68
    OPERATOR_EQ    shift, and go to state 69
    OPERATOR_DIF   shift, and go to state 70
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    LIT_STRING     shift, and go to state 48
    '<'            shift, and go to state 71
    '>'            shift, and go to state 72
    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '.'            shift, and go to state 75
    '/'            shift, and go to state 76
    '&'            shift, and go to state 77
    '|'            shift, and go to state 78
    '~'            shift, and go to state 79
    '('            shift, and go to state 49

    TK_IDENTIFIER  [reduce using rule 59 (l_print)]
    $default       reduce using rule 59 (l_print)

    literal  go to state 50
    exp      go to state 51
    l_print  go to state 80


State 52

   27 cmd: KW_PRINT l_print .

    $default  reduce using rule 27 (cmd)


State 53

   28 cmd: KW_RETURN exp .
   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    OPERATOR_LE   shift, and go to state 67
    OPERATOR_GE   shift, and go to state 68
    OPERATOR_EQ   shift, and go to state 69
    OPERATOR_DIF  shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '.'           shift, and go to state 75
    '/'           shift, and go to state 76
    '&'           shift, and go to state 77
    '|'           shift, and go to state 78
    '~'           shift, and go to state 79

    $default  reduce using rule 28 (cmd)


State 54

   24 cmd: TK_IDENTIFIER ASSIGNMENT . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 81


State 55

   25 cmd: TK_IDENTIFIER '[' . exp ']' ASSIGNMENT exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 82


State 56

   20 bloco: '{' comando '}' .

    $default  reduce using rule 20 (bloco)


State 57

   22 comando_fim: ';' . cmd comando_fim

    KW_IF          shift, and go to state 31
    KW_WHILE       shift, and go to state 32
    KW_READ        shift, and go to state 33
    KW_PRINT       shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    '{'            shift, and go to state 27

    $default  reduce using rule 32 (cmd)

    bloco    go to state 37
    cmd      go to state 83
    cmdRead  go to state 40


State 58

   21 comando: cmd comando_fim .

    $default  reduce using rule 21 (comando)


State 59

   15 elemento_vetor: literal elemento_vetor .

    $default  reduce using rule 15 (elemento_vetor)


State 60

   29 cmd: KW_IF '(' exp . ')' cmd else cmd
   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    OPERATOR_LE   shift, and go to state 67
    OPERATOR_GE   shift, and go to state 68
    OPERATOR_EQ   shift, and go to state 69
    OPERATOR_DIF  shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '.'           shift, and go to state 75
    '/'           shift, and go to state 76
    '&'           shift, and go to state 77
    '|'           shift, and go to state 78
    '~'           shift, and go to state 79
    ')'           shift, and go to state 84


State 61

   30 cmd: KW_WHILE '(' exp . ')' cmd
   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    OPERATOR_LE   shift, and go to state 67
    OPERATOR_GE   shift, and go to state 68
    OPERATOR_EQ   shift, and go to state 69
    OPERATOR_DIF  shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '.'           shift, and go to state 75
    '/'           shift, and go to state 76
    '&'           shift, and go to state 77
    '|'           shift, and go to state 78
    '~'           shift, and go to state 79
    ')'           shift, and go to state 85


State 62

   36 cmdRead: KW_READ TK_IDENTIFIER '[' . exp ']'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 86


State 63

   39 exp: TK_IDENTIFIER '(' . argumento ')'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    $default  reduce using rule 56 (argumento)

    literal    go to state 50
    exp        go to state 87
    argumento  go to state 88


State 64

   38 exp: TK_IDENTIFIER '[' . exp ']'

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 89


State 65

   57 l_print: LIT_STRING l_print .

    $default  reduce using rule 57 (l_print)


State 66

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp
   54    | '(' exp . ')'

    OPERATOR_LE   shift, and go to state 67
    OPERATOR_GE   shift, and go to state 68
    OPERATOR_EQ   shift, and go to state 69
    OPERATOR_DIF  shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '.'           shift, and go to state 75
    '/'           shift, and go to state 76
    '&'           shift, and go to state 77
    '|'           shift, and go to state 78
    '~'           shift, and go to state 79
    ')'           shift, and go to state 90


State 67

   49 exp: exp OPERATOR_LE . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 91


State 68

   48 exp: exp OPERATOR_GE . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 92


State 69

   47 exp: exp OPERATOR_EQ . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 93


State 70

   50 exp: exp OPERATOR_DIF . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 94


State 71

   45 exp: exp '<' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 95


State 72

   46 exp: exp '>' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 96


State 73

   41 exp: exp '+' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 97


State 74

   42 exp: exp '-' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 98


State 75

   43 exp: exp '.' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 99


State 76

   44 exp: exp '/' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 100


State 77

   51 exp: exp '&' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 101


State 78

   52 exp: exp '|' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 102


State 79

   53 exp: exp '~' . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 103


State 80

   58 l_print: exp l_print .

    $default  reduce using rule 58 (l_print)


State 81

   24 cmd: TK_IDENTIFIER ASSIGNMENT exp .
   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    OPERATOR_LE   shift, and go to state 67
    OPERATOR_GE   shift, and go to state 68
    OPERATOR_EQ   shift, and go to state 69
    OPERATOR_DIF  shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '.'           shift, and go to state 75
    '/'           shift, and go to state 76
    '&'           shift, and go to state 77
    '|'           shift, and go to state 78
    '~'           shift, and go to state 79

    $default  reduce using rule 24 (cmd)


State 82

   25 cmd: TK_IDENTIFIER '[' exp . ']' ASSIGNMENT exp
   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    OPERATOR_LE   shift, and go to state 67
    OPERATOR_GE   shift, and go to state 68
    OPERATOR_EQ   shift, and go to state 69
    OPERATOR_DIF  shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '.'           shift, and go to state 75
    '/'           shift, and go to state 76
    '&'           shift, and go to state 77
    '|'           shift, and go to state 78
    '~'           shift, and go to state 79
    ']'           shift, and go to state 104


State 83

   22 comando_fim: ';' cmd . comando_fim

    ';'  shift, and go to state 57

    $default  reduce using rule 23 (comando_fim)

    comando_fim  go to state 105


State 84

   29 cmd: KW_IF '(' exp ')' . cmd else cmd

    KW_IF          shift, and go to state 31
    KW_WHILE       shift, and go to state 32
    KW_READ        shift, and go to state 33
    KW_PRINT       shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    '{'            shift, and go to state 27

    KW_IF          [reduce using rule 32 (cmd)]
    KW_WHILE       [reduce using rule 32 (cmd)]
    KW_READ        [reduce using rule 32 (cmd)]
    KW_PRINT       [reduce using rule 32 (cmd)]
    KW_RETURN      [reduce using rule 32 (cmd)]
    TK_IDENTIFIER  [reduce using rule 32 (cmd)]
    '{'            [reduce using rule 32 (cmd)]
    $default       reduce using rule 32 (cmd)

    bloco    go to state 37
    cmd      go to state 106
    cmdRead  go to state 40


State 85

   30 cmd: KW_WHILE '(' exp ')' . cmd

    KW_IF          shift, and go to state 31
    KW_WHILE       shift, and go to state 32
    KW_READ        shift, and go to state 33
    KW_PRINT       shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    '{'            shift, and go to state 27

    KW_IF          [reduce using rule 32 (cmd)]
    KW_WHILE       [reduce using rule 32 (cmd)]
    KW_READ        [reduce using rule 32 (cmd)]
    KW_PRINT       [reduce using rule 32 (cmd)]
    KW_RETURN      [reduce using rule 32 (cmd)]
    TK_IDENTIFIER  [reduce using rule 32 (cmd)]
    '{'            [reduce using rule 32 (cmd)]
    $default       reduce using rule 32 (cmd)

    bloco    go to state 37
    cmd      go to state 107
    cmdRead  go to state 40


State 86

   36 cmdRead: KW_READ TK_IDENTIFIER '[' exp . ']'
   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    OPERATOR_LE   shift, and go to state 67
    OPERATOR_GE   shift, and go to state 68
    OPERATOR_EQ   shift, and go to state 69
    OPERATOR_DIF  shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '.'           shift, and go to state 75
    '/'           shift, and go to state 76
    '&'           shift, and go to state 77
    '|'           shift, and go to state 78
    '~'           shift, and go to state 79
    ']'           shift, and go to state 108


State 87

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp
   55 argumento: exp . argumento

    OPERATOR_LE    shift, and go to state 67
    OPERATOR_GE    shift, and go to state 68
    OPERATOR_EQ    shift, and go to state 69
    OPERATOR_DIF   shift, and go to state 70
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '<'            shift, and go to state 71
    '>'            shift, and go to state 72
    '+'            shift, and go to state 73
    '-'            shift, and go to state 74
    '.'            shift, and go to state 75
    '/'            shift, and go to state 76
    '&'            shift, and go to state 77
    '|'            shift, and go to state 78
    '~'            shift, and go to state 79
    '('            shift, and go to state 49

    $default  reduce using rule 56 (argumento)

    literal    go to state 50
    exp        go to state 87
    argumento  go to state 109


State 88

   39 exp: TK_IDENTIFIER '(' argumento . ')'

    ')'  shift, and go to state 110


State 89

   38 exp: TK_IDENTIFIER '[' exp . ']'
   41    | exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    OPERATOR_LE   shift, and go to state 67
    OPERATOR_GE   shift, and go to state 68
    OPERATOR_EQ   shift, and go to state 69
    OPERATOR_DIF  shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '.'           shift, and go to state 75
    '/'           shift, and go to state 76
    '&'           shift, and go to state 77
    '|'           shift, and go to state 78
    '~'           shift, and go to state 79
    ']'           shift, and go to state 111


State 90

   54 exp: '(' exp ')' .

    $default  reduce using rule 54 (exp)


State 91

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   49    | exp OPERATOR_LE exp .
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '.'  shift, and go to state 75
    '/'  shift, and go to state 76
    '&'  shift, and go to state 77
    '|'  shift, and go to state 78
    '~'  shift, and go to state 79

    $default  reduce using rule 49 (exp)


State 92

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   48    | exp OPERATOR_GE exp .
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '.'  shift, and go to state 75
    '/'  shift, and go to state 76
    '&'  shift, and go to state 77
    '|'  shift, and go to state 78
    '~'  shift, and go to state 79

    $default  reduce using rule 48 (exp)


State 93

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   47    | exp OPERATOR_EQ exp .
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '.'  shift, and go to state 75
    '/'  shift, and go to state 76
    '&'  shift, and go to state 77
    '|'  shift, and go to state 78
    '~'  shift, and go to state 79

    $default  reduce using rule 47 (exp)


State 94

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   50    | exp OPERATOR_DIF exp .
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '.'  shift, and go to state 75
    '/'  shift, and go to state 76
    '&'  shift, and go to state 77
    '|'  shift, and go to state 78
    '~'  shift, and go to state 79

    $default  reduce using rule 50 (exp)


State 95

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   45    | exp '<' exp .
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '.'  shift, and go to state 75
    '/'  shift, and go to state 76
    '&'  shift, and go to state 77
    '|'  shift, and go to state 78
    '~'  shift, and go to state 79

    $default  reduce using rule 45 (exp)


State 96

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   46    | exp '>' exp .
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '.'  shift, and go to state 75
    '/'  shift, and go to state 76
    '&'  shift, and go to state 77
    '|'  shift, and go to state 78
    '~'  shift, and go to state 79

    $default  reduce using rule 46 (exp)


State 97

   41 exp: exp . '+' exp
   41    | exp '+' exp .
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    '.'  shift, and go to state 75
    '/'  shift, and go to state 76
    '&'  shift, and go to state 77
    '|'  shift, and go to state 78
    '~'  shift, and go to state 79

    $default  reduce using rule 41 (exp)


State 98

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   42    | exp '-' exp .
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    '.'  shift, and go to state 75
    '/'  shift, and go to state 76
    '&'  shift, and go to state 77
    '|'  shift, and go to state 78
    '~'  shift, and go to state 79

    $default  reduce using rule 42 (exp)


State 99

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   43    | exp '.' exp .
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    '&'  shift, and go to state 77
    '|'  shift, and go to state 78
    '~'  shift, and go to state 79

    $default  reduce using rule 43 (exp)


State 100

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   44    | exp '/' exp .
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    '&'  shift, and go to state 77
    '|'  shift, and go to state 78
    '~'  shift, and go to state 79

    $default  reduce using rule 44 (exp)


State 101

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   51    | exp '&' exp .
   52    | exp . '|' exp
   53    | exp . '~' exp

    $default  reduce using rule 51 (exp)


State 102

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   52    | exp '|' exp .
   53    | exp . '~' exp

    $default  reduce using rule 52 (exp)


State 103

   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp
   53    | exp '~' exp .

    $default  reduce using rule 53 (exp)


State 104

   25 cmd: TK_IDENTIFIER '[' exp ']' . ASSIGNMENT exp

    ASSIGNMENT  shift, and go to state 112


State 105

   22 comando_fim: ';' cmd comando_fim .

    $default  reduce using rule 22 (comando_fim)


State 106

   29 cmd: KW_IF '(' exp ')' cmd . else cmd

    KW_ELSE  shift, and go to state 113

    KW_ELSE   [reduce using rule 34 (else)]
    $default  reduce using rule 34 (else)

    else  go to state 114


State 107

   30 cmd: KW_WHILE '(' exp ')' cmd .

    $default  reduce using rule 30 (cmd)


State 108

   36 cmdRead: KW_READ TK_IDENTIFIER '[' exp ']' .

    $default  reduce using rule 36 (cmdRead)


State 109

   55 argumento: exp argumento .

    $default  reduce using rule 55 (argumento)


State 110

   39 exp: TK_IDENTIFIER '(' argumento ')' .

    $default  reduce using rule 39 (exp)


State 111

   38 exp: TK_IDENTIFIER '[' exp ']' .

    $default  reduce using rule 38 (exp)


State 112

   25 cmd: TK_IDENTIFIER '[' exp ']' ASSIGNMENT . exp

    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEGER    shift, and go to state 13
    LIT_FLOAT      shift, and go to state 14
    LIT_CHAR       shift, and go to state 15
    '('            shift, and go to state 49

    literal  go to state 50
    exp      go to state 115


State 113

   33 else: KW_ELSE . cmd

    KW_IF          shift, and go to state 31
    KW_WHILE       shift, and go to state 32
    KW_READ        shift, and go to state 33
    KW_PRINT       shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    '{'            shift, and go to state 27

    KW_IF          [reduce using rule 32 (cmd)]
    KW_WHILE       [reduce using rule 32 (cmd)]
    KW_READ        [reduce using rule 32 (cmd)]
    KW_PRINT       [reduce using rule 32 (cmd)]
    KW_RETURN      [reduce using rule 32 (cmd)]
    TK_IDENTIFIER  [reduce using rule 32 (cmd)]
    '{'            [reduce using rule 32 (cmd)]
    $default       reduce using rule 32 (cmd)

    bloco    go to state 37
    cmd      go to state 116
    cmdRead  go to state 40


State 114

   29 cmd: KW_IF '(' exp ')' cmd else . cmd

    KW_IF          shift, and go to state 31
    KW_WHILE       shift, and go to state 32
    KW_READ        shift, and go to state 33
    KW_PRINT       shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    '{'            shift, and go to state 27

    KW_IF          [reduce using rule 32 (cmd)]
    KW_WHILE       [reduce using rule 32 (cmd)]
    KW_READ        [reduce using rule 32 (cmd)]
    KW_PRINT       [reduce using rule 32 (cmd)]
    KW_RETURN      [reduce using rule 32 (cmd)]
    TK_IDENTIFIER  [reduce using rule 32 (cmd)]
    '{'            [reduce using rule 32 (cmd)]
    $default       reduce using rule 32 (cmd)

    bloco    go to state 37
    cmd      go to state 117
    cmdRead  go to state 40


State 115

   25 cmd: TK_IDENTIFIER '[' exp ']' ASSIGNMENT exp .
   41 exp: exp . '+' exp
   42    | exp . '-' exp
   43    | exp . '.' exp
   44    | exp . '/' exp
   45    | exp . '<' exp
   46    | exp . '>' exp
   47    | exp . OPERATOR_EQ exp
   48    | exp . OPERATOR_GE exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_DIF exp
   51    | exp . '&' exp
   52    | exp . '|' exp
   53    | exp . '~' exp

    OPERATOR_LE   shift, and go to state 67
    OPERATOR_GE   shift, and go to state 68
    OPERATOR_EQ   shift, and go to state 69
    OPERATOR_DIF  shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '.'           shift, and go to state 75
    '/'           shift, and go to state 76
    '&'           shift, and go to state 77
    '|'           shift, and go to state 78
    '~'           shift, and go to state 79

    $default  reduce using rule 25 (cmd)


State 116

   33 else: KW_ELSE cmd .

    $default  reduce using rule 33 (else)


State 117

   29 cmd: KW_IF '(' exp ')' cmd else cmd .

    $default  reduce using rule 29 (cmd)
